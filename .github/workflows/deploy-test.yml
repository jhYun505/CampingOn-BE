name: Docker Deploy to Test Server

on:
  push:
    branches:
      - test/dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 소스코드 체크아웃
        - name: Checkout code
          uses: actions/checkout@v4.2.2
    
        - name: Log in to Docker Hub
          uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Build and push Docker image
          id: push
          uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: jhyun505/camping-on:latest

         # EC2 서버에 배포
        - name: Deploy to EC2 using SSH
          run: |
            # SSH Private Key 설정
            mkdir ~/.ssh
            echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
  
            # SSH 연결 및 명령 실행
            ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@$${{ secrets.EC2_HOST }} << 'EOF'
              # Docker Hub 로그인
              echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
  
              # 최신 이미지 가져오기
              docker pull ${{ secrets.DOCKER_USERNAME }}/camping-on:latest
  
              # 기존 컨테이너 중지 및 삭제
              docker stop camping-on || true
              docker rm camping-on || true
  
              # 새 컨테이너 실행
              docker run -d --env-file ${{ secrets.EC2_TARGET_PATH }}/.env --name camping-on -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/camping-on:latest
            EOF
